<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="init(event)" 
		 mouseFocusChange="{operator.mouseFocusChangeHandler(event)}"
		 implements="com.taobao.tbbpm.define.figure.Figure"
		 >
	<s:layout>
		<s:VerticalLayout horizontalAlign="center"/>
	</s:layout>
	<fx:Script>
		<![CDATA[
			import com.taobao.tbbpm.TbbpmTheme;
			import com.taobao.tbbpm.define.flash.FMNode;
			import com.taobao.tbbpm.define.flash.impl.FStartNode;
			
			import mx.events.FlexEvent;
			public var nodeType:String = "";
			[Bindable]private var operator:FigureOperator = new FigureOperator();
			
			public function getMNode():FMNode
			{
				return operator.mnode;
			}
			
			public function getOperator():FigureOperator
			{
				return operator;
			}
			override protected function keyDownHandler(event:KeyboardEvent):void
			{
				operator.keyDownHandler(event);
			}
			
			public function onDelete():void
			{
				operator.onDelete();
				
			}
			
			public function setWH(width:int,height:int):void
			{
				this.width = width;
				this.height =height;
				
			}
			
			public function setXY(x:int, y:int):void
			{
				this.x = x; this.y = y;
				operator.setG(this);
			}
			
			public function setMNode(mNode:FMNode):void
			{
				operator.mnode = mNode;
				
			}
			
			public function init(event:FlexEvent):void{
				
				this.graphics.beginFill(0xf5f5f5);
				graphics.drawCircle(20,20,20);
				this.graphics.endFill();
				
				this.graphics.beginFill(0xebebeb);
				graphics.drawCircle(20,20,19);
				this.graphics.endFill();
				
				this.graphics.beginFill(0xe1e1e1);
				graphics.drawCircle(20,20,18);
				this.graphics.endFill();
				
				this.graphics.beginFill(0xffffff);
				graphics.drawCircle(20,20,17);
				this.graphics.endFill();
				
				this.graphics.beginFill(0xffffff);
				graphics.drawCircle(20,20,16);
				this.graphics.endFill();
				
				if(operator.mnode is FStartNode){
					this.graphics.beginFill(0x9BBB59);
				}else{
					this.graphics.beginFill(0xC0504D);
				}
				this.graphics.drawCircle(20,20,15);
				this.graphics.endFill();
				
				
				operator.setNodeFigure(this);
			}
			protected function mouseFocusChangeHandler(event:FocusEvent):void
			{
				trace("aa");
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:BorderContainer name="node" id="node" width="100%" height="100%" backgroundAlpha="0.0"
					   borderVisible="false"
					   minWidth="0" minHeight="0"
					   mouseDown="{operator.mouseDownHandler(event)}"
					   mouseUp="{operator.mouseUpHandler(event)}"
					   mouseOver="{operator.arrowVisible=true}"
					   mouseOut="{operator.arrowVisible=false}">
		
		

		<s:Image id="rightArrow" visible="{operator.arrowVisible}"
				 right="0" 
				 verticalCenter="0"
				 source="{TbbpmTheme.arrow_node}"
				 rotation="0" 
				 mouseDown="operator.arrowMouseDownHandler(event,TbbpmLineFigure.right)"  
				 mouseUp="operator.arrowMouseUpHandler(event,TbbpmLineFigure.right)"/>
		<s:Image id="bottomArrow" visible="{operator.arrowVisible}"
				 horizontalCenter="0"
				 bottom="0"  
				 source="{TbbpmTheme.arrow_node}"
				 rotation="90" 
				 mouseDown="operator.arrowMouseDownHandler(event,TbbpmLineFigure.bottom)"  
				 mouseUp="operator.arrowMouseUpHandler(event,TbbpmLineFigure.bottom)"/>
		<s:Image id="leftArrow" visible="{operator.arrowVisible}"
				 left="0"
				 verticalCenter="0"
				 source="{TbbpmTheme.arrow_node}"
				 rotation="180" 
				 mouseDown="operator.arrowMouseDownHandler(event,TbbpmLineFigure.left)"
				 mouseUp="operator.arrowMouseUpHandler(event,TbbpmLineFigure.left)"/>
		<s:Image id="topArrow" visible="{operator.arrowVisible}"
				 horizontalCenter="0"
				 top="0"  
				 source="{TbbpmTheme.arrow_node}"
				 rotation="270" 
				 mouseDown="operator.arrowMouseDownHandler(event,TbbpmLineFigure.top)"  
				 mouseUp="operator.arrowMouseUpHandler(event,TbbpmLineFigure.top)"/>
		
	</s:BorderContainer>
</s:Group>
